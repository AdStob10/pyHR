"""Extend employee model - add roles

Revision ID: d7fc9df2556a
Revises: aa1726d9c0fc
Create Date: 2025-05-09 18:11:54.924673

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd7fc9df2556a'
down_revision: Union[str, None] = 'aa1726d9c0fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    employee_role = postgresql.ENUM('BASIC_EMPLOYEE', 'MANAGER', 'ADMIN', name='employeerole')
    employee_role.create(op.get_bind(), checkfirst=True)
    op.add_column('employee', sa.Column('role', sa.Enum('BASIC_EMPLOYEE', 'MANAGER', 'ADMIN', name='employeerole'), nullable=True))
    op.add_column('employee', sa.Column('manager_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'employee', 'employee', ['manager_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    employee_role = postgresql.ENUM('BASIC_EMPLOYEE', 'MANAGER', 'ADMIN', name='employeerole')
    employee_role.drop(op.get_bind(), checkfirst=True)
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_column('employee', 'manager_id')
    op.drop_column('employee', 'role')
    # ### end Alembic commands ###
